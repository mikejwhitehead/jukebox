// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// CardsColumns holds the columns for the "cards" table.
	CardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created", Type: field.TypeTime},
		{Name: "modified", Type: field.TypeTime},
		{Name: "playlist_card", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// CardsTable holds the schema information for the "cards" table.
	CardsTable = &schema.Table{
		Name:       "cards",
		Columns:    CardsColumns,
		PrimaryKey: []*schema.Column{CardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "cards_playlists_card",
				Columns: []*schema.Column{CardsColumns[4]},

				RefColumns: []*schema.Column{PlaylistsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CardScansColumns holds the columns for the "card_scans" table.
	CardScansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "scan_at", Type: field.TypeTime},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"success", "error"}, Default: "success"},
		{Name: "result", Type: field.TypeString, Nullable: true},
		{Name: "card_scan_playlist", Type: field.TypeInt, Nullable: true},
		{Name: "card_scan_card", Type: field.TypeInt, Nullable: true},
	}
	// CardScansTable holds the schema information for the "card_scans" table.
	CardScansTable = &schema.Table{
		Name:       "card_scans",
		Columns:    CardScansColumns,
		PrimaryKey: []*schema.Column{CardScansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "card_scans_playlists_playlist",
				Columns: []*schema.Column{CardScansColumns[4]},

				RefColumns: []*schema.Column{PlaylistsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "card_scans_cards_card",
				Columns: []*schema.Column{CardScansColumns[5]},

				RefColumns: []*schema.Column{CardsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlaylistsColumns holds the columns for the "playlists" table.
	PlaylistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created", Type: field.TypeTime},
		{Name: "modified", Type: field.TypeTime},
		{Name: "media_url", Type: field.TypeString},
	}
	// PlaylistsTable holds the schema information for the "playlists" table.
	PlaylistsTable = &schema.Table{
		Name:        "playlists",
		Columns:     PlaylistsColumns,
		PrimaryKey:  []*schema.Column{PlaylistsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CardsTable,
		CardScansTable,
		PlaylistsTable,
	}
)

func init() {
	CardsTable.ForeignKeys[0].RefTable = PlaylistsTable
	CardScansTable.ForeignKeys[0].RefTable = PlaylistsTable
	CardScansTable.ForeignKeys[1].RefTable = CardsTable
}
