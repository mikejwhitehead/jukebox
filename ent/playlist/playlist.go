// Code generated by entc, DO NOT EDIT.

package playlist

import (
	"time"
)

const (
	// Label holds the string label denoting the playlist type in the database.
	Label = "playlist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreated holds the string denoting the created field in the database.
	FieldCreated = "created"
	// FieldModified holds the string denoting the modified field in the database.
	FieldModified = "modified"
	// FieldMediaURL holds the string denoting the media_url field in the database.
	FieldMediaURL = "media_url"

	// EdgeCard holds the string denoting the card edge name in mutations.
	EdgeCard = "card"
	// EdgeCardScans holds the string denoting the card_scans edge name in mutations.
	EdgeCardScans = "card_scans"

	// Table holds the table name of the playlist in the database.
	Table = "playlists"
	// CardTable is the table the holds the card relation/edge.
	CardTable = "cards"
	// CardInverseTable is the table name for the Card entity.
	// It exists in this package in order to avoid circular dependency with the "card" package.
	CardInverseTable = "cards"
	// CardColumn is the table column denoting the card relation/edge.
	CardColumn = "playlist_card"
	// CardScansTable is the table the holds the card_scans relation/edge.
	CardScansTable = "card_scans"
	// CardScansInverseTable is the table name for the CardScan entity.
	// It exists in this package in order to avoid circular dependency with the "cardscan" package.
	CardScansInverseTable = "card_scans"
	// CardScansColumn is the table column denoting the card_scans relation/edge.
	CardScansColumn = "card_scan_playlist"
)

// Columns holds all SQL columns for playlist fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreated,
	FieldModified,
	FieldMediaURL,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreated holds the default value on creation for the "created" field.
	DefaultCreated func() time.Time
	// DefaultModified holds the default value on creation for the "modified" field.
	DefaultModified func() time.Time
	// UpdateDefaultModified holds the default value on update for the "modified" field.
	UpdateDefaultModified func() time.Time
)
